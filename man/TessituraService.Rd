% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control.R
\docType{class}
\name{TessituraService}
\alias{TessituraService}
\title{TessituraService}
\description{
TessituraService

TessituraService
}
\details{
A TessituraService class

This is a more useable Tessitura Service class that can be implemented by
further objects to create requests.
}
\examples{
TessituraService$new(
tessituraUrl = "https://mytessi.tessituranetwork.com",
credentials = createCredentials(username="creif", usergroup="admin", location="MET95", password="impresario")
)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tessituraUrl}}{Base Tessitura REST API url}

\item{\code{credentials}}{Base64 encoded credentials - can be created with createCredentials()}

\item{\code{defaultHeaders}}{Default headers for all requests}

\item{\code{timeout}}{The maximum timeout for a request}

\item{\code{maxRetryAttempts}}{The maximum number of times to retry a request before failing}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TessituraService$new()}}
\item \href{#method-CallTessi}{\code{TessituraService$CallTessi()}}
\item \href{#method-Execute}{\code{TessituraService$Execute()}}
\item \href{#method-deserialize}{\code{TessituraService$deserialize()}}
\item \href{#method-deserializeObj}{\code{TessituraService$deserializeObj()}}
\item \href{#method-clone}{\code{TessituraService$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$new(
  tessituraUrl,
  credentials,
  defaultHeaders = NULL,
  timeout = 5000,
  maxRetryAttempts = 3
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tessituraUrl}}{Base Tessitura REST API url}

\item{\code{credentials}}{Base64 encoded credentials}

\item{\code{defaultHeaders}}{Default headers for all requests}

\item{\code{timeout}}{The maximum timeout for a request. Defaults to 5000.}

\item{\code{maxRetryAttempts}}{The maximum number of times to retry a request before failing. Defaults to 3.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CallTessi"></a>}}
\if{latex}{\out{\hypertarget{method-CallTessi}{}}}
\subsection{Method \code{CallTessi()}}{
Call a Tessitura endpoint with retries
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$CallTessi(url, method, queryParams, headerParams, body, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The endpoint to request relative to the tessituraUrl}

\item{\code{method}}{The HTTP method}

\item{\code{queryParams}}{The query parameters for the request}

\item{\code{headerParams}}{Any additional headers to attach to the request}

\item{\code{body}}{The request body for POST and PUT methods}

\item{\code{...}}{Any other parameters for the httr methods}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Execute"></a>}}
\if{latex}{\out{\hypertarget{method-Execute}{}}}
\subsection{Method \code{Execute()}}{
Execute a request
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$Execute(url, method, queryParams, headerParams, body, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The endpoint to request relative to the tessituraUrl}

\item{\code{method}}{The HTTP method}

\item{\code{queryParams}}{The query parameters for the request}

\item{\code{headerParams}}{Any additional headers to attach to the request}

\item{\code{body}}{The request body for POST and PUT methods}

\item{\code{...}}{Any other parameters for the httr methods}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserialize"></a>}}
\if{latex}{\out{\hypertarget{method-deserialize}{}}}
\subsection{Method \code{deserialize()}}{
Deserialize the content of api response to the given type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$deserialize(resp, returnType, pkgEnv)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resp}}{The response object}

\item{\code{returnType}}{The type of object to return}

\item{\code{pkgEnv}}{The environment to find the type in}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserializeObj"></a>}}
\if{latex}{\out{\hypertarget{method-deserializeObj}{}}}
\subsection{Method \code{deserializeObj()}}{
Deserialize the response from jsonlite object based on the given type
by handling complex and nested types by iterating recursively
Example returnTypes will be like "array[integer]", "map(Performance)", "array[map(Performance)]", etc.,
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$deserializeObj(obj, returnType, pkgEnv)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obj}}{The object to deserialize}

\item{\code{returnType}}{The type of object to return}

\item{\code{pkgEnv}}{The environment to find the type in}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TessituraService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
